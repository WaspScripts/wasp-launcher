name: "Publish"

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    if: ${{ github.repository_owner == 'WaspScripts' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2
      - name: "Print previous package.json"
        run: cat ./package.json
      - name: "Bump version"
        id: version-bump
        uses: "phips28/gh-action-bump-version@v11.0.7"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Print new package.json"
        run: cat ./package.json
      - name: "Output new version"
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"
  publish-tauri:
    if: ${{ github.repository_owner == 'WaspScripts' }}
    needs: bump-version
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: wasp-launcher-v__VERSION__
          releaseName: "WaspLauncher v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          assetNamePattern: "[name].[ext]"
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Discord notification
        shell: bash
        run: |
          BODY=$(jq -nc \
            --arg title "WaspLauncher Updated" \
            --arg desc "${{ github.event.head_commit.message }}" \
            --arg url  "https://github.com/WaspScripts/wasp-launcher/commit/${{ github.event.head_commit.id }}" \
            --arg foot "Author: ${{ github.event.head_commit.author.name }}" \
            --argjson color 16742912 \
            '{embeds:[{title:$title,description:$desc,url:$url,color:$color,footer:{text:$foot}}]}')
          curl \
              -H "Content-Type: application/json" \
              -d "$BODY" \
              ${{ secrets.UPDATES_WEBHOOK }}
